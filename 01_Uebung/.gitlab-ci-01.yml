stages:
    - build
    - check
    #- acceptancetest
    - dockerize

build-java:
    stage: build
    image: inf-docker.fh-rosenheim.de/studwinten4338/docker-images/gradle:6.8.3-jdk11
    script:
        - echo "compiling and creating deployable artifact"
        - cd ./01_Uebung/
        - gradle assemble
    artifacts:
        paths:
          - ./01_Uebung/build/*
        expire_in: 1 day

test-java:
    stage: check
    image: inf-docker.fh-rosenheim.de/studwinten4338/docker-images/gradle:6.8.3-jdk11
    script:
        - echo "Running Unit Tests and Static Code analysis"
        - cd ./01_Uebung/
        - gradle check
    artifacts:
        reports:
            junit:
              - ./build/test-results/test/TEST-*.xml
        paths:
          - ./build/*
        expire_in: 1 day

#acceptancetest-java:
#    stage: acceptancetest
#    image: adoptopenjdk:11-jre-hotspot
#    script:
#       - echo "Acceptance Test"
#        - cd ./build/libs
#        - java -jar *.jar

docker-build:
    #Official docker image.
    image: inf-docker.fh-rosenheim.de/studwinten4338/docker-images/docker:latest
    stage: dockerize
    services:
        - name: inf-docker.fh-rosenheim.de/studwinten4338/docker-images/docker:dind
          alias: docker
    before_script:
        - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    script:
        - cd ./01_Uebung/
        - docker build --pull -t "$CI_REGISTRY_IMAGE" .
        - docker push "$CI_REGISTRY_IMAGE"
        

plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.hibernate.orm'
	id 'jacoco'
	id "org.sonarqube" version "3.0"
}

group = 'de.thro.studienarbeit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url 'https://repo.spring.io/snapshot' }
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {

	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.modelmapper:modelmapper:2.4.3'
	implementation group: 'org.springframework.plugin', name: 'spring-plugin-core', version: '2.0.0.RELEASE'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	compileOnly 'org.projectlombok:lombok'


	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
}

sonarqube {
	properties {
		property "sonar.projectKey", "TESTKEY"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.login", "0b126b85b00a6568cd3016713b3f4a5b1f68b2a5"

		property "sonar.sources", "src/main, build.gradle"
		property "sonar.coverage.exclusions", "**/*Exception.java,**/migration/Migration*.java,**/*Config.java"
	}
}

test {
	useJUnitPlatform()

	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.enabled false
	}


	getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/*.exec"))
}

bootBuildImage {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}

hibernate {
	enhance {
		enableLazyInitialization = true
		enableDirtyTracking = true
		enableAssociationManagement = true
		enableExtendedEnhancement = false
	}
}
